{"version":3,"sources":["./src/app/admin/accounts/accounts-routing.module.ts","./src/app/admin/accounts/accounts.module.ts","./src/app/admin/accounts/add-edit.component.ts","./src/app/admin/accounts/add-edit.component.html","./src/app/admin/accounts/list.component.ts","./src/app/admin/accounts/list.component.html"],"names":[],"mappings":"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","file":"accounts-accounts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ListComponent },\r\n    { path: 'add', component: AddEditComponent },\r\n    { path: 'edit/:id', component: AddEditComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccountsRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountsRoutingModule } from './accounts-routing.module';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AccountsRoutingModule\r\n    ],\r\n    declarations: [\r\n        ListComponent,\r\n        AddEditComponent\r\n    ]\r\n})\r\nexport class AccountsModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\nimport { MustMatch } from '@app/_helpers';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        this.form = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            role: ['', Validators.required],\r\n            password: ['', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\r\n            confirmPassword: ['']\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createAccount();\r\n        } else {\r\n            this.updateAccount();\r\n        }\r\n    }\r\n\r\n    private createAccount() {\r\n        this.accountService.create(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Account created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateAccount() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<h1 *ngIf=\"isAddMode\">Create Account</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit Account</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Title</label>\r\n            <select formControlName=\"title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"Mr\">Mr</option>\r\n                <option value=\"Mrs\">Mrs</option>\r\n                <option value=\"Miss\">Miss</option>\r\n                <option value=\"Ms\">Ms</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-7\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label>Role</label>\r\n            <select formControlName=\"role\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"User\">User</option>\r\n                <option value=\"Admin\">Admin</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.role.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.role.errors.required\">Role is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"!isAddMode\">\r\n        <h3 class=\"pt-3\">Change Password</h3>\r\n        <p>Leave blank to keep the same password</p>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"/admin/accounts\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\nimport { Account } from '@app/_models';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    accounts: any[];\r\n\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        this.accountService.getAll()\r\n            .pipe(first())\r\n            .subscribe(accounts => this.accounts = accounts);\r\n    }\r\n\r\n    deleteAccount(id: string) {\r\n        const account = this.accounts.find(x => x.id === id);\r\n        account.isDeleting = true;\r\n        this.accountService.delete(id)\r\n            .pipe(first())\r\n            .subscribe(() => {\r\n                this.accounts = this.accounts.filter(x => x.id !== id) \r\n            });\r\n    }\r\n}","<h1>Accounts</h1>\r\n<p>All accounts from secure (admin only) api end point:</p>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Create Account</a>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width:30%\">Name</th>\r\n            <th style=\"width:30%\">Email</th>\r\n            <th style=\"width:30%\">Role</th>\r\n            <th style=\"width:10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let account of accounts\">\r\n            <td>{{account.title}} {{account.firstName}} {{account.lastName}}</td>\r\n            <td>{{account.email}}</td>\r\n            <td>{{account.role}}</td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{account.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n                <button (click)=\"deleteAccount(account.id)\" class=\"btn btn-sm btn-danger btn-delete-account\" [disabled]=\"account.isDeleting\">\r\n                    <span *ngIf=\"account.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!account.isDeleting\">Delete</span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"!accounts\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>"],"sourceRoot":"webpack:///"}