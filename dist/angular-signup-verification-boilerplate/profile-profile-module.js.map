{"version":3,"sources":["./src/app/profile/details.component.ts","./src/app/profile/details.component.html","./src/app/profile/layout.component.ts","./src/app/profile/layout.component.html","./src/app/profile/profile-routing.module.ts","./src/app/profile/profile.module.ts","./src/app/profile/update.component.ts","./src/app/profile/update.component.html"],"names":[],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'details.component.html' })\r\nexport class DetailsComponent {\r\n    account = this.accountService.accountValue;\r\n\r\n    constructor(private accountService: AccountService) { }\r\n}","<h1>My Profile</h1>\r\n<p>\r\n    <strong>Name: </strong> {{account.title}} {{account.firstName}} {{account.lastName}}<br />\r\n    <strong>Email: </strong> {{account.email}}\r\n</p>\r\n<p><a routerLink=\"update\">Update Profile</a></p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { DetailsComponent } from './details.component';\r\nimport { UpdateComponent } from './update.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: DetailsComponent },\r\n            { path: 'update', component: UpdateComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { DetailsComponent } from './details.component';\r\nimport { UpdateComponent } from './update.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        ProfileRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        DetailsComponent,\r\n        UpdateComponent\r\n    ]\r\n})\r\nexport class ProfileModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\nimport { MustMatch } from '@app/_helpers';\r\n\r\n@Component({ templateUrl: 'update.component.html' })\r\nexport class UpdateComponent implements OnInit {\r\n    account = this.accountService.accountValue;\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    deleting = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            title: [this.account.title, Validators.required],\r\n            firstName: [this.account.firstName, Validators.required],\r\n            lastName: [this.account.lastName, Validators.required],\r\n            email: [this.account.email, [Validators.required, Validators.email]],\r\n            password: ['', [Validators.minLength(6)]],\r\n            confirmPassword: ['']\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.update(this.account.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    onDelete() {\r\n        if (confirm('Are you sure?')) {\r\n            this.deleting = true;\r\n            this.accountService.delete(this.account.id)\r\n                .pipe(first())\r\n                .subscribe(() => {\r\n                    this.alertService.success('Account deleted successfully', { keepAfterRouteChange: true });\r\n                });\r\n        }\r\n    }\r\n}","<h1>Update Profile</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Title</label>\r\n            <select formControlName=\"title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"Mr\">Mr</option>\r\n                <option value=\"Mrs\">Mrs</option>\r\n                <option value=\"Miss\">Miss</option>\r\n                <option value=\"Ms\">Ms</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-5\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n        </div>\r\n    </div>\r\n    <h3 class=\"pt-3\">Change Password</h3>\r\n    <p>Leave blank to keep the same password</p>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button type=\"submit\" [disabled]=\"loading\" class=\"btn btn-primary mr-2\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Update\r\n        </button>\r\n        <button type=\"button\" (click)=\"onDelete()\" [disabled]=\"deleting\" class=\"btn btn-danger\">\r\n            <span *ngIf=\"deleting\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Delete\r\n        </button>\r\n        <a routerLink=\"../\" href=\"\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>\r\n"],"sourceRoot":"webpack:///"}